model,params,mean_test_explained_variance_score,mean_train_explained_variance_score,mean_test_r2_score,mean_train_r2_score,ranking_test_explained_variance_score,ranking_test_r2_score
LinearRegression,fit_intercept: True,0.45,0.79,0.44,0.79,lowest of its class,lowest of its class
LinearRegression,fit_intercept: False,0.45,0.79,0.44,0.79,-,-
SVR,"kernel: linear, gamma: auto, C: 10",0.4,0.76,0.39,0.76,-,lowest of its class
SVR,"kernel: linear, gamma: auto, C: 1",0.43,0.76,0.43,0.76,-,-
SVR,"kernel: rbf, gamma: scale, C: 1",0.51,0.87,0.49,0.86,highest of its class,highest of its class
SVR,"kernel: linear, gamma: scale, C: 10",0.4,0.76,0.39,0.76,-,-
SVR,"kernel: rbf, gamma: auto, C: 20",0.49,0.89,0.47,0.88,-,-
SVR,"kernel: linear, gamma: auto, C: 20",0.39,0.76,0.39,0.76,lowest of its class,-
SVR,"kernel: rbf, gamma: scale, C: 10",0.49,0.89,0.48,0.88,-,-
SVR,"kernel: rbf, gamma: scale, C: 20",0.49,0.89,0.48,0.88,-,-
SVR,"kernel: linear, gamma: scale, C: 20",0.39,0.76,0.39,0.76,-,-
SVR,"kernel: rbf, gamma: auto, C: 10",0.49,0.89,0.47,0.88,-,-
DecisionTreeRegressor,"splitter: best, min_impurity_decrease: 0.1, max_depth: 100, criterion: absolute_error",0.0,0.0,-0.13,-0.12,lowest of its class,lowest of its class
DecisionTreeRegressor,"splitter: best, min_impurity_decrease: 0.1, max_depth: 500, criterion: poisson",0.0,0.0,-0.02,0.0,-,-
DecisionTreeRegressor,"splitter: best, min_impurity_decrease: 0.5, max_depth: 1000, criterion: squared_error",0.0,0.0,-0.02,0.0,-,-
DecisionTreeRegressor,"splitter: best, min_impurity_decrease: 0.1, max_depth: 500, criterion: friedman_mse",0.28,0.9,0.27,0.9,-,-
DecisionTreeRegressor,"splitter: random, min_impurity_decrease: 0.5, max_depth: 1000, criterion: squared_error",0.0,0.0,-0.02,0.0,-,-
DecisionTreeRegressor,"splitter: random, min_impurity_decrease: 0.9, max_depth: 100, criterion: friedman_mse",0.46,0.54,0.44,0.54,highest of its class,highest of its class
DecisionTreeRegressor,"splitter: best, min_impurity_decrease: 0.1, max_depth: 1000, criterion: poisson",0.0,0.0,-0.02,0.0,-,-
DecisionTreeRegressor,"splitter: best, min_impurity_decrease: 0.9, max_depth: 1000, criterion: squared_error",0.0,0.0,-0.02,0.0,-,-
DecisionTreeRegressor,"splitter: best, min_impurity_decrease: 0.9, max_depth: 500, criterion: poisson",0.0,0.0,-0.02,0.0,-,-
DecisionTreeRegressor,"splitter: best, min_impurity_decrease: 0.1, max_depth: 100, criterion: friedman_mse",0.28,0.9,0.27,0.9,-,-
RandomForestRegressor,"n_estimators: 200, max_features: auto, max_depth: 200, criterion: squared_error",0.63,0.95,0.62,0.95,-,-
RandomForestRegressor,"n_estimators: 100, max_features: auto, max_depth: 50, criterion: poisson",0.39,0.61,0.38,0.61,-,lowest of its class
RandomForestRegressor,"n_estimators: 200, max_features: auto, max_depth: 50, criterion: friedman_mse",0.63,0.95,0.62,0.95,-,-
RandomForestRegressor,"n_estimators: 100, max_features: auto, max_depth: 200, criterion: friedman_mse",0.62,0.94,0.62,0.94,-,-
RandomForestRegressor,"n_estimators: 100, max_features: auto, max_depth: 100, criterion: poisson",0.47,0.86,0.46,0.86,-,-
RandomForestRegressor,"n_estimators: 200, max_features: auto, max_depth: 100, criterion: poisson",0.46,0.86,0.46,0.86,-,-
RandomForestRegressor,"n_estimators: 100, max_features: auto, max_depth: 200, criterion: squared_error",0.62,0.94,0.62,0.94,-,-
RandomForestRegressor,"n_estimators: 200, max_features: auto, max_depth: 100, criterion: squared_error",0.63,0.95,0.62,0.95,-,-
RandomForestRegressor,"n_estimators: 100, max_features: auto, max_depth: 50, criterion: absolute_error",0.64,0.95,0.64,0.95,highest of its class,highest of its class
RandomForestRegressor,"n_estimators: 200, max_features: auto, max_depth: 50, criterion: poisson",0.38,0.61,0.38,0.61,lowest of its class,-
KNeighborsRegressor,"weights: uniform, n_neighbors: 200, algorithm: ball_tree",0.27,0.27,0.24,0.24,lowest of its class,lowest of its class
KNeighborsRegressor,"weights: uniform, n_neighbors: 50, algorithm: ball_tree",0.46,0.48,0.43,0.46,-,-
KNeighborsRegressor,"weights: distance, n_neighbors: 50, algorithm: ball_tree",0.47,1.0,0.44,1.0,highest of its class,highest of its class
KNeighborsRegressor,"weights: distance, n_neighbors: 100, algorithm: auto",0.4,1.0,0.37,1.0,-,-
KNeighborsRegressor,"weights: uniform, n_neighbors: 200, algorithm: auto",0.27,0.27,0.24,0.24,-,-
KNeighborsRegressor,"weights: uniform, n_neighbors: 50, algorithm: auto",0.46,0.48,0.43,0.46,-,-
KNeighborsRegressor,"weights: distance, n_neighbors: 200, algorithm: auto",0.3,1.0,0.26,1.0,-,-
KNeighborsRegressor,"weights: uniform, n_neighbors: 100, algorithm: ball_tree",0.39,0.4,0.36,0.37,-,-
KNeighborsRegressor,"weights: distance, n_neighbors: 50, algorithm: auto",0.47,1.0,0.44,1.0,-,-
KNeighborsRegressor,"weights: distance, n_neighbors: 200, algorithm: ball_tree",0.3,1.0,0.26,1.0,-,-
AdaBoostRegressor,"n_estimators: 200, loss: exponential, learning_rate: 0.9",0.61,0.83,0.53,0.76,-,lowest of its class
AdaBoostRegressor,"n_estimators: 50, loss: exponential, learning_rate: 0.9",0.61,0.82,0.55,0.79,-,-
AdaBoostRegressor,"n_estimators: 100, loss: exponential, learning_rate: 0.1",0.62,0.82,0.61,0.81,highest of its class,highest of its class
AdaBoostRegressor,"n_estimators: 100, loss: square, learning_rate: 0.9",0.6,0.81,0.56,0.77,lowest of its class,-
AdaBoostRegressor,"n_estimators: 50, loss: linear, learning_rate: 0.9",0.61,0.82,0.56,0.78,-,-
AdaBoostRegressor,"n_estimators: 200, loss: square, learning_rate: 0.9",0.6,0.82,0.55,0.77,-,-
AdaBoostRegressor,"n_estimators: 100, loss: exponential, learning_rate: 0.5",0.61,0.82,0.56,0.78,-,-
AdaBoostRegressor,"n_estimators: 100, loss: square, learning_rate: 0.5",0.6,0.82,0.55,0.78,-,-
AdaBoostRegressor,"n_estimators: 200, loss: exponential, learning_rate: 0.5",0.61,0.82,0.54,0.77,-,-
AdaBoostRegressor,"n_estimators: 50, loss: square, learning_rate: 0.1",0.61,0.81,0.61,0.8,-,-
GaussianProcessRegressor,alpha: 1e-10,0.0,1.0,-1.05,1.0,lowest of its class,lowest of its class
GaussianProcessRegressor,alpha: 1e-05,0.0,1.0,-1.05,1.0,-,-
GaussianProcessRegressor,alpha: 0.001,0.0,1.0,-1.05,1.0,-,-
MLPRegressor,"max_iter: 100, hidden_layer_sizes: 50",-2.73,0.83,-2.79,0.83,lowest of its class,lowest of its class
MLPRegressor,"max_iter: 200, hidden_layer_sizes: 50",-2.72,0.84,-2.78,0.84,-,-
MLPRegressor,"max_iter: 300, hidden_layer_sizes: 50",-2.72,0.84,-2.78,0.84,-,-
MLPRegressor,"max_iter: 100, hidden_layer_sizes: 100",-2.17,0.91,-2.23,0.91,-,-
MLPRegressor,"max_iter: 200, hidden_layer_sizes: 100",-2.17,0.91,-2.23,0.91,-,-
MLPRegressor,"max_iter: 300, hidden_layer_sizes: 100",-2.17,0.91,-2.23,0.91,-,-
MLPRegressor,"max_iter: 100, hidden_layer_sizes: 150",-0.81,0.94,-0.83,0.94,highest of its class,highest of its class
MLPRegressor,"max_iter: 200, hidden_layer_sizes: 150",-0.81,0.94,-0.83,0.94,-,-
MLPRegressor,"max_iter: 300, hidden_layer_sizes: 150",-0.81,0.94,-0.83,0.94,-,-

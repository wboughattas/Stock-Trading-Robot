model,params,mean_test_mean_absolute_error,mean_train_mean_absolute_error,mean_test_explained_variance_score,mean_train_explained_variance_score,mean_test_r2_score,mean_train_r2_score,mean_test_mean_squared_error,mean_train_mean_squared_error,ranking_test_ranking_absolute_error,ranking_test_explained_variance_score,ranking_test_r2_score,ranking_test_ranking_squared_error
LinearRegression,fit_intercept: True,0.1,0.09,0.64,0.71,0.64,0.71,0.02,0.02,lowest of its class,lowest of its class,lowest of its class,lowest of its class
LinearRegression,fit_intercept: False,0.1,0.09,0.64,0.71,0.64,0.71,0.02,0.02,-,-,-,-
SVR,"C: 1, gamma: auto, kernel: rbf",0.11,0.07,0.6,0.85,0.59,0.85,0.02,0.01,-,-,-,lowest of its class
SVR,"C: 1, gamma: auto, kernel: linear",0.1,0.09,0.63,0.69,0.63,0.69,0.02,0.02,lowest of its class,highest of its class,highest of its class,-
SVR,"C: 1, gamma: scale, kernel: rbf",0.11,0.07,0.6,0.85,0.59,0.85,0.02,0.01,-,-,-,-
SVR,"C: 1, gamma: scale, kernel: linear",0.1,0.09,0.63,0.69,0.63,0.69,0.02,0.02,-,-,-,-
SVR,"C: 10, gamma: auto, kernel: rbf",0.12,0.07,0.53,0.9,0.52,0.89,0.03,0.01,highest of its class,lowest of its class,lowest of its class,highest of its class
SVR,"C: 10, gamma: auto, kernel: linear",0.1,0.09,0.63,0.69,0.63,0.69,0.02,0.02,-,-,-,-
SVR,"C: 10, gamma: scale, kernel: rbf",0.12,0.07,0.53,0.9,0.52,0.89,0.03,0.01,-,-,-,-
SVR,"C: 10, gamma: scale, kernel: linear",0.1,0.09,0.63,0.69,0.63,0.69,0.02,0.02,-,-,-,-
SVR,"C: 20, gamma: auto, kernel: rbf",0.12,0.07,0.53,0.9,0.52,0.89,0.03,0.01,-,-,-,-
SVR,"C: 20, gamma: auto, kernel: linear",0.1,0.09,0.63,0.69,0.63,0.69,0.02,0.02,-,-,-,-
SVR,"C: 20, gamma: scale, kernel: rbf",0.12,0.07,0.53,0.9,0.52,0.89,0.03,0.01,-,-,-,-
SVR,"C: 20, gamma: scale, kernel: linear",0.1,0.09,0.63,0.69,0.63,0.69,0.02,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",0.13,0.0,0.25,1.0,0.25,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,highest of its class,lowest of its class,lowest of its class,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",0.13,0.0,0.31,1.0,0.31,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",0.13,0.0,0.25,1.0,0.25,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",0.13,0.0,0.31,1.0,0.31,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",0.13,0.0,0.25,1.0,0.25,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",0.13,0.0,0.31,1.0,0.31,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",0.13,0.0,0.28,1.0,0.27,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",0.12,0.07,0.4,0.85,0.4,0.85,0.03,0.01,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",0.11,0.1,0.57,0.63,0.57,0.63,0.02,0.02,lowest of its class,highest of its class,highest of its class,lowest of its class
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",0.11,0.11,0.56,0.57,0.56,0.57,0.02,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",0.13,0.0,0.29,1.0,0.29,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",0.12,0.06,0.41,0.89,0.41,0.89,0.03,0.01,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",0.11,0.1,0.56,0.66,0.56,0.66,0.02,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",0.11,0.1,0.55,0.6,0.55,0.6,0.02,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",0.13,0.0,0.28,1.0,0.27,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",0.12,0.07,0.4,0.85,0.4,0.85,0.03,0.01,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",0.11,0.1,0.57,0.63,0.57,0.63,0.02,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",0.11,0.11,0.56,0.57,0.56,0.57,0.02,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",0.13,0.0,0.29,1.0,0.29,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",0.12,0.06,0.41,0.89,0.41,0.89,0.03,0.01,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",0.11,0.1,0.56,0.66,0.56,0.66,0.02,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",0.11,0.1,0.55,0.6,0.55,0.6,0.02,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",0.13,0.0,0.28,1.0,0.27,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",0.12,0.07,0.4,0.85,0.4,0.85,0.03,0.01,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",0.11,0.1,0.57,0.63,0.57,0.63,0.02,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",0.11,0.11,0.56,0.57,0.56,0.57,0.02,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",0.13,0.0,0.29,1.0,0.29,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",0.12,0.06,0.41,0.89,0.41,0.89,0.03,0.01,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",0.11,0.1,0.56,0.66,0.56,0.66,0.02,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",0.11,0.1,0.55,0.6,0.55,0.6,0.02,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",0.14,0.0,0.27,1.0,0.27,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,highest of its class
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",0.14,0.0,0.24,1.0,0.24,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",0.14,0.0,0.27,1.0,0.27,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",0.14,0.0,0.24,1.0,0.24,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",0.14,0.0,0.27,1.0,0.27,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",0.14,0.0,0.24,1.0,0.24,1.0,0.04,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",0.17,0.17,0.0,0.0,0.13,0.15,0.06,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",0.14,0.04,0.17,0.84,0.17,0.84,0.05,0.01,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",0.14,0.1,0.25,0.48,0.25,0.48,0.04,0.03,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",0.14,0.0,0.15,1.0,0.14,1.0,0.05,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",0.14,0.0,0.09,1.0,0.09,1.0,0.05,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",0.14,0.0,0.15,1.0,0.14,1.0,0.05,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",0.14,0.0,0.09,1.0,0.09,1.0,0.05,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",0.18,0.18,0.0,0.0,0.0,0.0,0.05,0.05,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 50, n_estimators: 100, max_features: auto",0.1,0.04,0.65,0.95,0.64,0.95,0.02,0.0,lowest of its class,highest of its class,-,lowest of its class
RandomForestRegressor,"criterion: squared_error, max_depth: 50, n_estimators: 200, max_features: auto",0.1,0.03,0.65,0.95,0.65,0.95,0.02,0.0,-,-,highest of its class,-
RandomForestRegressor,"criterion: squared_error, max_depth: 100, n_estimators: 100, max_features: auto",0.1,0.04,0.65,0.95,0.64,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 100, n_estimators: 200, max_features: auto",0.1,0.03,0.65,0.95,0.65,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 200, n_estimators: 100, max_features: auto",0.1,0.04,0.65,0.95,0.64,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 200, n_estimators: 200, max_features: auto",0.1,0.03,0.65,0.95,0.65,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 50, n_estimators: 100, max_features: auto",0.1,0.04,0.65,0.95,0.65,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 50, n_estimators: 200, max_features: auto",0.1,0.03,0.65,0.95,0.65,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 100, n_estimators: 100, max_features: auto",0.1,0.04,0.65,0.95,0.65,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 100, n_estimators: 200, max_features: auto",0.1,0.03,0.65,0.95,0.65,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 200, n_estimators: 100, max_features: auto",0.1,0.04,0.65,0.95,0.65,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 200, n_estimators: 200, max_features: auto",0.1,0.03,0.65,0.95,0.65,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 50, n_estimators: 100, max_features: auto",0.1,0.04,0.65,0.95,0.64,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 50, n_estimators: 200, max_features: auto",0.1,0.04,0.65,0.95,0.65,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 100, n_estimators: 100, max_features: auto",0.1,0.04,0.65,0.95,0.64,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 100, n_estimators: 200, max_features: auto",0.1,0.04,0.65,0.95,0.65,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 200, n_estimators: 100, max_features: auto",0.1,0.04,0.65,0.95,0.64,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 200, n_estimators: 200, max_features: auto",0.1,0.04,0.65,0.95,0.65,0.95,0.02,0.0,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 50, n_estimators: 100, max_features: auto",0.14,0.13,0.3,0.37,0.3,0.37,0.04,0.03,highest of its class,lowest of its class,lowest of its class,highest of its class
RandomForestRegressor,"criterion: poisson, max_depth: 50, n_estimators: 200, max_features: auto",0.14,0.13,0.31,0.37,0.31,0.37,0.04,0.03,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 100, n_estimators: 100, max_features: auto",0.13,0.1,0.42,0.61,0.42,0.61,0.03,0.02,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 100, n_estimators: 200, max_features: auto",0.13,0.1,0.43,0.61,0.43,0.61,0.03,0.02,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 200, n_estimators: 100, max_features: auto",0.12,0.06,0.47,0.87,0.47,0.87,0.03,0.01,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 200, n_estimators: 200, max_features: auto",0.12,0.06,0.48,0.87,0.48,0.87,0.03,0.01,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: auto, n_neighbors: 50",0.11,0.1,0.56,0.58,0.55,0.57,0.02,0.02,lowest of its class,highest of its class,highest of its class,lowest of its class
KNeighborsRegressor,"weights: uniform, algorithm: auto, n_neighbors: 100",0.11,0.11,0.52,0.54,0.51,0.52,0.03,0.03,-,-,-,highest of its class
KNeighborsRegressor,"weights: uniform, algorithm: auto, n_neighbors: 200",0.12,0.11,0.47,0.48,0.45,0.45,0.03,0.03,highest of its class,lowest of its class,lowest of its class,-
KNeighborsRegressor,"weights: uniform, algorithm: ball_tree, n_neighbors: 50",0.11,0.1,0.56,0.58,0.55,0.57,0.02,0.02,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: ball_tree, n_neighbors: 100",0.11,0.11,0.52,0.54,0.51,0.52,0.03,0.03,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: ball_tree, n_neighbors: 200",0.12,0.11,0.47,0.48,0.45,0.45,0.03,0.03,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: auto, n_neighbors: 50",0.11,0.0,0.56,1.0,0.55,1.0,0.02,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: auto, n_neighbors: 100",0.11,0.0,0.53,1.0,0.51,1.0,0.03,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: auto, n_neighbors: 200",0.12,0.0,0.48,1.0,0.46,1.0,0.03,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: ball_tree, n_neighbors: 50",0.11,0.0,0.56,1.0,0.55,1.0,0.02,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: ball_tree, n_neighbors: 100",0.11,0.0,0.53,1.0,0.51,1.0,0.03,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: ball_tree, n_neighbors: 200",0.12,0.0,0.48,1.0,0.46,1.0,0.03,0.0,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.1, loss: linear",0.11,0.1,0.62,0.69,0.62,0.69,0.02,0.02,lowest of its class,-,highest of its class,lowest of its class
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.1, loss: square",0.11,0.1,0.61,0.7,0.6,0.69,0.02,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.1, loss: exponential",0.11,0.1,0.61,0.69,0.61,0.69,0.02,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.5, loss: linear",0.13,0.12,0.6,0.71,0.53,0.65,0.03,0.02,-,-,-,highest of its class
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.5, loss: square",0.14,0.13,0.59,0.72,0.5,0.62,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.5, loss: exponential",0.13,0.12,0.61,0.72,0.53,0.65,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.9, loss: linear",0.15,0.13,0.58,0.71,0.47,0.6,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.9, loss: square",0.14,0.13,0.6,0.71,0.49,0.6,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.9, loss: exponential",0.14,0.13,0.6,0.72,0.5,0.62,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.1, loss: linear",0.11,0.1,0.63,0.71,0.61,0.69,0.02,0.02,-,highest of its class,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.1, loss: square",0.12,0.1,0.62,0.71,0.59,0.69,0.02,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.1, loss: exponential",0.11,0.1,0.62,0.71,0.61,0.69,0.02,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.5, loss: linear",0.15,0.13,0.58,0.71,0.45,0.59,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.5, loss: square",0.15,0.13,0.58,0.71,0.46,0.59,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.5, loss: exponential",0.15,0.13,0.59,0.71,0.46,0.59,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.9, loss: linear",0.15,0.14,0.58,0.71,0.44,0.58,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.9, loss: square",0.15,0.13,0.6,0.73,0.48,0.61,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.9, loss: exponential",0.15,0.14,0.58,0.71,0.44,0.57,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.1, loss: linear",0.12,0.11,0.62,0.72,0.57,0.67,0.02,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.1, loss: square",0.13,0.12,0.6,0.72,0.52,0.64,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.1, loss: exponential",0.12,0.11,0.63,0.72,0.58,0.68,0.02,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.5, loss: linear",0.16,0.14,0.56,0.71,0.4,0.55,0.03,0.02,highest of its class,lowest of its class,lowest of its class,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.5, loss: square",0.16,0.14,0.57,0.7,0.42,0.55,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.5, loss: exponential",0.16,0.14,0.58,0.71,0.42,0.55,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.9, loss: linear",0.16,0.14,0.58,0.71,0.41,0.55,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.9, loss: square",0.15,0.14,0.59,0.73,0.45,0.59,0.03,0.02,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.9, loss: exponential",0.16,0.14,0.57,0.71,0.41,0.54,0.03,0.02,-,-,-,-
GaussianProcessRegressor,alpha: 1e-10,0.23,0.0,0.0,1.0,0.99,1.0,0.11,0.0,lowest of its class,lowest of its class,lowest of its class,lowest of its class
GaussianProcessRegressor,alpha: 1e-05,0.23,0.0,0.0,1.0,0.99,1.0,0.11,0.0,-,-,-,-
GaussianProcessRegressor,alpha: 0.001,0.23,0.0,0.0,1.0,0.99,1.0,0.11,0.0,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 100",0.18,0.07,0.04,0.85,0.05,0.85,0.06,0.01,highest of its class,-,-,highest of its class
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 200",0.17,0.06,0.0,0.89,0.0,0.89,0.05,0.01,-,lowest of its class,lowest of its class,lowest of its class
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 300",0.17,0.06,0.0,0.89,0.0,0.89,0.05,0.01,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 100",0.16,0.05,0.11,0.91,0.11,0.91,0.05,0.0,lowest of its class,-,-,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 200",0.16,0.05,0.11,0.91,0.11,0.91,0.05,0.0,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 300",0.16,0.05,0.11,0.91,0.11,0.91,0.05,0.0,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 100",0.17,0.04,0.12,0.94,0.12,0.94,0.06,0.0,-,highest of its class,highest of its class,-
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 200",0.17,0.04,0.12,0.94,0.12,0.94,0.06,0.0,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 300",0.17,0.04,0.12,0.94,0.12,0.94,0.06,0.0,-,-,-,-

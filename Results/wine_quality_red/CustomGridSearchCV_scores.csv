model,params,mean_test_mean_absolute_error,mean_train_mean_absolute_error,mean_test_explained_variance_score,mean_train_explained_variance_score,mean_test_r2_score,mean_train_r2_score,mean_test_mean_squared_error,mean_train_mean_squared_error,ranking_test_ranking_absolute_error,ranking_test_explained_variance_score,ranking_test_r2_score,ranking_test_ranking_squared_error
LinearRegression,fit_intercept: True,0.48,0.51,0.35,0.36,0.35,0.36,0.4,0.42,lowest of its class,lowest of its class,lowest of its class,lowest of its class
LinearRegression,fit_intercept: False,0.48,0.51,0.35,0.36,0.35,0.36,0.4,0.42,-,-,-,-
SVR,"C: 1, gamma: auto, kernel: rbf",0.45,0.38,0.38,0.56,0.37,0.56,0.38,0.3,lowest of its class,highest of its class,highest of its class,lowest of its class
SVR,"C: 1, gamma: auto, kernel: linear",0.48,0.5,0.34,0.35,0.34,0.35,0.4,0.43,-,-,-,-
SVR,"C: 1, gamma: scale, kernel: rbf",0.45,0.38,0.38,0.56,0.37,0.56,0.38,0.3,-,-,-,-
SVR,"C: 1, gamma: scale, kernel: linear",0.48,0.5,0.34,0.35,0.34,0.35,0.4,0.43,-,-,-,-
SVR,"C: 10, gamma: auto, kernel: rbf",0.48,0.28,0.26,0.71,0.25,0.71,0.46,0.19,-,-,-,-
SVR,"C: 10, gamma: auto, kernel: linear",0.48,0.5,0.34,0.35,0.34,0.35,0.4,0.43,-,-,-,-
SVR,"C: 10, gamma: scale, kernel: rbf",0.48,0.28,0.26,0.71,0.25,0.71,0.46,0.19,-,-,-,-
SVR,"C: 10, gamma: scale, kernel: linear",0.48,0.5,0.34,0.35,0.34,0.35,0.4,0.43,-,-,-,-
SVR,"C: 20, gamma: auto, kernel: rbf",0.5,0.25,0.19,0.76,0.18,0.76,0.5,0.16,highest of its class,lowest of its class,lowest of its class,highest of its class
SVR,"C: 20, gamma: auto, kernel: linear",0.48,0.5,0.34,0.35,0.34,0.35,0.4,0.43,-,-,-,-
SVR,"C: 20, gamma: scale, kernel: rbf",0.5,0.25,0.19,0.76,0.18,0.76,0.5,0.16,-,-,-,-
SVR,"C: 20, gamma: scale, kernel: linear",0.48,0.5,0.34,0.35,0.34,0.35,0.4,0.43,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",0.51,0.0,0.18,1.0,0.19,1.0,0.72,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,highest of its class,lowest of its class,lowest of its class,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",0.43,0.0,0.06,1.0,0.06,1.0,0.58,0.0,lowest of its class,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",0.55,0.58,0.19,0.18,0.19,0.18,0.5,0.55,-,-,-,lowest of its class
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",0.51,0.0,0.18,1.0,0.19,1.0,0.72,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",0.43,0.0,0.06,1.0,0.06,1.0,0.58,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",0.55,0.58,0.19,0.18,0.19,0.18,0.5,0.55,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",0.51,0.0,0.18,1.0,0.19,1.0,0.72,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",0.43,0.0,0.06,1.0,0.06,1.0,0.58,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",0.55,0.58,0.19,0.18,0.19,0.18,0.5,0.55,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",0.51,0.0,0.18,1.0,0.19,1.0,0.72,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",0.49,0.0,0.08,1.0,0.08,1.0,0.66,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",0.49,0.13,0.02,0.89,0.01,0.89,0.61,0.07,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",0.56,0.35,0.07,0.68,0.06,0.68,0.57,0.21,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",0.43,0.0,0.06,1.0,0.06,1.0,0.58,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",0.43,0.0,0.06,1.0,0.06,1.0,0.58,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",0.45,0.05,0.07,0.96,0.07,0.96,0.57,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",0.49,0.16,0.1,0.88,0.09,0.88,0.55,0.08,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",0.51,0.0,0.18,1.0,0.19,1.0,0.72,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",0.49,0.0,0.08,1.0,0.08,1.0,0.66,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",0.49,0.13,0.02,0.89,0.01,0.89,0.61,0.07,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",0.56,0.35,0.07,0.68,0.06,0.68,0.57,0.21,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",0.43,0.0,0.06,1.0,0.06,1.0,0.58,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",0.43,0.0,0.06,1.0,0.06,1.0,0.58,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",0.45,0.05,0.07,0.96,0.07,0.96,0.57,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",0.49,0.16,0.1,0.88,0.09,0.88,0.55,0.08,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",0.51,0.0,0.18,1.0,0.19,1.0,0.72,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",0.49,0.0,0.08,1.0,0.08,1.0,0.66,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",0.49,0.13,0.02,0.89,0.01,0.89,0.61,0.07,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",0.56,0.35,0.07,0.68,0.06,0.68,0.57,0.21,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",0.43,0.0,0.06,1.0,0.06,1.0,0.58,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",0.43,0.0,0.06,1.0,0.06,1.0,0.58,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",0.45,0.05,0.07,0.96,0.07,0.96,0.57,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",0.49,0.16,0.1,0.88,0.09,0.88,0.55,0.08,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",0.47,0.0,0.01,1.0,0.03,1.0,0.63,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",0.49,0.0,0.07,1.0,0.08,1.0,0.66,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",0.45,0.5,0.14,0.1,0.14,0.09,0.53,0.6,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",0.47,0.0,0.01,1.0,0.03,1.0,0.63,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",0.49,0.0,0.07,1.0,0.08,1.0,0.66,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",0.45,0.5,0.14,0.1,0.14,0.09,0.53,0.6,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",0.47,0.0,0.01,1.0,0.03,1.0,0.63,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",0.49,0.0,0.07,1.0,0.08,1.0,0.66,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",0.45,0.5,0.14,0.1,0.14,0.09,0.53,0.6,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",0.63,0.67,0.0,0.0,0.24,0.19,0.76,0.79,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",0.52,0.0,0.13,1.0,0.18,1.0,0.72,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",0.55,0.0,0.22,1.0,0.29,1.0,0.79,0.0,-,highest of its class,highest of its class,highest of its class
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",0.52,0.0,0.13,1.0,0.18,1.0,0.72,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",0.55,0.0,0.22,1.0,0.29,1.0,0.79,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",0.52,0.0,0.13,1.0,0.18,1.0,0.72,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",0.55,0.0,0.22,1.0,0.29,1.0,0.79,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",0.66,0.69,0.0,0.0,0.0,0.0,0.61,0.67,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 50, n_estimators: 100, max_features: auto",0.43,0.16,0.45,0.93,0.44,0.93,0.34,0.05,-,highest of its class,highest of its class,lowest of its class
RandomForestRegressor,"criterion: squared_error, max_depth: 50, n_estimators: 200, max_features: auto",0.42,0.16,0.45,0.93,0.44,0.93,0.34,0.05,lowest of its class,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 100, n_estimators: 100, max_features: auto",0.43,0.16,0.45,0.93,0.44,0.93,0.34,0.05,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 100, n_estimators: 200, max_features: auto",0.42,0.16,0.45,0.93,0.44,0.93,0.34,0.05,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 200, n_estimators: 100, max_features: auto",0.43,0.16,0.45,0.93,0.44,0.93,0.34,0.05,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 200, n_estimators: 200, max_features: auto",0.42,0.16,0.45,0.93,0.44,0.93,0.34,0.05,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 50, n_estimators: 100, max_features: auto",0.43,0.16,0.45,0.93,0.44,0.93,0.34,0.05,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 50, n_estimators: 200, max_features: auto",0.42,0.16,0.45,0.93,0.44,0.93,0.34,0.05,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 100, n_estimators: 100, max_features: auto",0.43,0.16,0.45,0.93,0.44,0.93,0.34,0.05,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 100, n_estimators: 200, max_features: auto",0.42,0.16,0.45,0.93,0.44,0.93,0.34,0.05,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 200, n_estimators: 100, max_features: auto",0.43,0.16,0.45,0.93,0.44,0.93,0.34,0.05,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 200, n_estimators: 200, max_features: auto",0.42,0.16,0.45,0.93,0.44,0.93,0.34,0.05,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 50, n_estimators: 100, max_features: auto",0.45,0.2,0.38,0.9,0.37,0.9,0.39,0.07,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 50, n_estimators: 200, max_features: auto",0.44,0.19,0.39,0.9,0.38,0.9,0.38,0.07,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 100, n_estimators: 100, max_features: auto",0.45,0.19,0.38,0.91,0.37,0.91,0.39,0.06,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 100, n_estimators: 200, max_features: auto",0.44,0.18,0.4,0.91,0.38,0.91,0.38,0.06,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 200, n_estimators: 100, max_features: auto",0.45,0.19,0.38,0.91,0.37,0.91,0.39,0.06,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 200, n_estimators: 200, max_features: auto",0.44,0.18,0.4,0.91,0.38,0.91,0.38,0.06,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 50, n_estimators: 100, max_features: auto",0.5,0.25,0.24,0.8,0.21,0.8,0.49,0.13,highest of its class,lowest of its class,-,highest of its class
RandomForestRegressor,"criterion: poisson, max_depth: 50, n_estimators: 200, max_features: auto",0.5,0.25,0.24,0.8,0.2,0.79,0.49,0.14,-,-,lowest of its class,-
RandomForestRegressor,"criterion: poisson, max_depth: 100, n_estimators: 100, max_features: auto",0.5,0.18,0.26,0.91,0.21,0.91,0.49,0.06,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 100, n_estimators: 200, max_features: auto",0.5,0.18,0.26,0.91,0.2,0.91,0.49,0.06,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 200, n_estimators: 100, max_features: auto",0.5,0.18,0.25,0.91,0.2,0.91,0.49,0.06,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 200, n_estimators: 200, max_features: auto",0.5,0.18,0.26,0.91,0.2,0.91,0.49,0.06,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: auto, n_neighbors: 50",0.53,0.52,0.3,0.37,0.29,0.37,0.44,0.42,highest of its class,-,-,highest of its class
KNeighborsRegressor,"weights: uniform, algorithm: auto, n_neighbors: 100",0.52,0.54,0.31,0.34,0.3,0.34,0.43,0.44,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: auto, n_neighbors: 200",0.53,0.56,0.28,0.3,0.27,0.3,0.44,0.46,-,lowest of its class,lowest of its class,-
KNeighborsRegressor,"weights: uniform, algorithm: ball_tree, n_neighbors: 50",0.53,0.52,0.3,0.37,0.29,0.37,0.44,0.42,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: ball_tree, n_neighbors: 100",0.52,0.54,0.31,0.34,0.3,0.34,0.43,0.44,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: ball_tree, n_neighbors: 200",0.53,0.56,0.28,0.3,0.27,0.3,0.44,0.46,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: auto, n_neighbors: 50",0.43,0.0,0.41,1.0,0.39,1.0,0.37,0.0,lowest of its class,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: auto, n_neighbors: 100",0.43,0.0,0.42,1.0,0.4,1.0,0.36,0.0,-,highest of its class,highest of its class,lowest of its class
KNeighborsRegressor,"weights: distance, algorithm: auto, n_neighbors: 200",0.43,0.0,0.4,1.0,0.39,1.0,0.37,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: ball_tree, n_neighbors: 50",0.43,0.0,0.41,1.0,0.39,1.0,0.37,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: ball_tree, n_neighbors: 100",0.43,0.0,0.42,1.0,0.4,1.0,0.36,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: ball_tree, n_neighbors: 200",0.43,0.0,0.4,1.0,0.39,1.0,0.37,0.0,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.1, loss: linear",0.52,0.51,0.33,0.45,0.32,0.45,0.41,0.37,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.1, loss: square",0.54,0.52,0.3,0.45,0.29,0.45,0.43,0.37,highest of its class,lowest of its class,lowest of its class,highest of its class
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.1, loss: exponential",0.52,0.51,0.32,0.44,0.31,0.44,0.42,0.37,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.5, loss: linear",0.53,0.51,0.32,0.46,0.31,0.46,0.42,0.36,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.5, loss: square",0.51,0.49,0.36,0.49,0.34,0.49,0.4,0.34,lowest of its class,highest of its class,highest of its class,lowest of its class
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.5, loss: exponential",0.52,0.5,0.34,0.48,0.33,0.47,0.41,0.35,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.9, loss: linear",0.52,0.5,0.34,0.48,0.33,0.48,0.41,0.35,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.9, loss: square",0.51,0.48,0.34,0.5,0.33,0.5,0.41,0.33,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.9, loss: exponential",0.51,0.48,0.34,0.5,0.33,0.5,0.41,0.33,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.1, loss: linear",0.52,0.51,0.33,0.46,0.32,0.46,0.41,0.36,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.1, loss: square",0.53,0.51,0.32,0.47,0.31,0.47,0.42,0.35,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.1, loss: exponential",0.52,0.51,0.33,0.45,0.32,0.45,0.42,0.36,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.5, loss: linear",0.52,0.5,0.34,0.48,0.33,0.48,0.41,0.35,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.5, loss: square",0.51,0.48,0.34,0.49,0.33,0.49,0.41,0.34,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.5, loss: exponential",0.51,0.49,0.35,0.49,0.34,0.49,0.4,0.34,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.9, loss: linear",0.51,0.49,0.33,0.49,0.32,0.49,0.41,0.34,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.9, loss: square",0.51,0.49,0.34,0.5,0.33,0.5,0.41,0.34,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.9, loss: exponential",0.51,0.49,0.34,0.49,0.33,0.49,0.41,0.34,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.1, loss: linear",0.53,0.5,0.33,0.47,0.32,0.47,0.42,0.35,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.1, loss: square",0.52,0.5,0.33,0.48,0.32,0.48,0.41,0.34,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.1, loss: exponential",0.52,0.5,0.33,0.47,0.32,0.47,0.41,0.35,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.5, loss: linear",0.52,0.5,0.34,0.48,0.33,0.48,0.41,0.34,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.5, loss: square",0.51,0.49,0.33,0.49,0.32,0.49,0.42,0.34,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.5, loss: exponential",0.52,0.5,0.33,0.48,0.32,0.48,0.41,0.35,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.9, loss: linear",0.51,0.49,0.33,0.48,0.32,0.48,0.41,0.34,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.9, loss: square",0.51,0.48,0.34,0.49,0.33,0.49,0.41,0.34,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.9, loss: exponential",0.52,0.49,0.33,0.48,0.32,0.48,0.42,0.35,-,-,-,-
GaussianProcessRegressor,alpha: 1e-10,0.96,0.0,2.22,1.0,2.83,1.0,2.34,0.0,lowest of its class,highest of its class,highest of its class,lowest of its class
GaussianProcessRegressor,alpha: 1e-05,0.96,0.0,2.22,1.0,2.83,1.0,2.34,0.0,-,-,-,-
GaussianProcessRegressor,alpha: 0.001,0.96,0.0,2.21,1.0,2.82,1.0,2.34,0.0,-,lowest of its class,lowest of its class,-
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 100",0.82,0.82,0.8,0.59,0.84,0.63,1.12,1.08,highest of its class,highest of its class,highest of its class,highest of its class
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 200",0.59,0.57,0.01,0.23,0.01,0.23,0.62,0.51,-,lowest of its class,lowest of its class,-
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 300",0.53,0.48,0.19,0.44,0.19,0.44,0.5,0.38,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 100",0.66,0.65,0.24,0.02,0.25,0.03,0.76,0.68,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 200",0.52,0.49,0.23,0.43,0.23,0.43,0.47,0.38,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 300",0.48,0.44,0.34,0.53,0.33,0.53,0.41,0.32,lowest of its class,-,-,-
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 100",0.64,0.63,0.14,0.05,0.14,0.04,0.7,0.64,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 200",0.5,0.46,0.29,0.48,0.29,0.48,0.43,0.35,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 300",0.48,0.42,0.35,0.56,0.34,0.56,0.4,0.29,-,-,-,lowest of its class

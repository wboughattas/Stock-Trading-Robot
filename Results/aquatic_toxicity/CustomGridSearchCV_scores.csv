model,params,mean_test_mean_absolute_error,mean_train_mean_absolute_error,mean_test_explained_variance_score,mean_train_explained_variance_score,mean_test_r2_score,mean_train_r2_score,mean_test_mean_squared_error,mean_train_mean_squared_error,ranking_test_ranking_absolute_error,ranking_test_explained_variance_score,ranking_test_r2_score,ranking_test_ranking_squared_error
LinearRegression,fit_intercept: True,0.87,0.91,0.48,0.49,0.48,0.49,1.38,1.44,lowest of its class,lowest of its class,lowest of its class,lowest of its class
LinearRegression,fit_intercept: False,0.87,0.91,0.48,0.49,0.48,0.49,1.38,1.44,-,-,-,-
SVR,"C: 1, gamma: auto, kernel: rbf",0.84,0.7,0.49,0.64,0.47,0.63,1.41,1.03,-,-,lowest of its class,-
SVR,"C: 1, gamma: auto, kernel: linear",0.87,0.9,0.47,0.48,0.47,0.48,1.42,1.47,highest of its class,lowest of its class,-,highest of its class
SVR,"C: 1, gamma: scale, kernel: rbf",0.84,0.7,0.49,0.64,0.47,0.63,1.41,1.03,-,-,-,-
SVR,"C: 1, gamma: scale, kernel: linear",0.87,0.9,0.47,0.48,0.47,0.48,1.42,1.47,-,-,-,-
SVR,"C: 10, gamma: auto, kernel: rbf",0.81,0.53,0.54,0.76,0.53,0.75,1.25,0.69,lowest of its class,highest of its class,highest of its class,lowest of its class
SVR,"C: 10, gamma: auto, kernel: linear",0.87,0.9,0.47,0.48,0.47,0.47,1.42,1.47,-,-,-,-
SVR,"C: 10, gamma: scale, kernel: rbf",0.81,0.53,0.54,0.76,0.53,0.75,1.25,0.69,-,-,-,-
SVR,"C: 10, gamma: scale, kernel: linear",0.87,0.9,0.47,0.48,0.47,0.47,1.42,1.47,-,-,-,-
SVR,"C: 20, gamma: auto, kernel: rbf",0.82,0.47,0.52,0.79,0.52,0.79,1.29,0.59,-,-,-,-
SVR,"C: 20, gamma: auto, kernel: linear",0.87,0.9,0.47,0.48,0.47,0.47,1.42,1.47,-,-,-,-
SVR,"C: 20, gamma: scale, kernel: rbf",0.82,0.47,0.52,0.79,0.52,0.79,1.29,0.59,-,-,-,-
SVR,"C: 20, gamma: scale, kernel: linear",0.87,0.9,0.47,0.48,0.47,0.47,1.42,1.47,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",1.1,0.0,0.03,1.0,0.03,1.0,2.58,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",1.09,1.13,0.18,0.21,0.18,0.21,2.2,2.22,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",1.09,1.13,0.18,0.21,0.18,0.21,2.2,2.22,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,lowest of its class,lowest of its class,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",1.1,0.0,0.16,1.0,0.14,1.0,2.29,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",1.09,1.06,0.11,0.33,0.1,0.33,2.39,1.86,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",1.1,1.12,0.14,0.22,0.13,0.22,2.31,2.17,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",1.1,0.0,0.03,1.0,0.03,1.0,2.58,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",1.09,1.13,0.18,0.21,0.18,0.21,2.2,2.22,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",1.09,1.13,0.18,0.21,0.18,0.21,2.2,2.22,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",1.1,0.0,0.16,1.0,0.14,1.0,2.29,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",1.09,1.06,0.11,0.33,0.1,0.33,2.39,1.86,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",1.1,1.12,0.14,0.22,0.13,0.22,2.31,2.17,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",1.1,0.0,0.03,1.0,0.03,1.0,2.58,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",1.09,1.13,0.18,0.21,0.18,0.21,2.2,2.22,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",1.09,1.13,0.18,0.21,0.18,0.21,2.2,2.22,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",1.1,0.0,0.16,1.0,0.14,1.0,2.29,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",1.09,1.06,0.11,0.33,0.1,0.33,2.39,1.86,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",1.1,1.12,0.14,0.22,0.13,0.22,2.31,2.17,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",1.07,0.0,0.08,1.0,0.07,1.0,2.47,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",1.18,0.07,0.09,0.99,0.09,0.99,2.91,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",1.26,0.22,0.14,0.96,0.14,0.96,3.05,0.1,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",1.11,0.36,0.1,0.9,0.1,0.9,2.41,0.28,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",1.04,0.0,0.2,1.0,0.19,1.0,2.15,0.0,lowest of its class,-,-,lowest of its class
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",1.08,0.07,0.13,1.0,0.11,1.0,2.36,0.01,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",1.1,0.19,0.1,0.98,0.08,0.98,2.46,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",1.05,0.27,0.12,0.96,0.1,0.96,2.39,0.12,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",1.07,0.0,0.08,1.0,0.07,1.0,2.47,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",1.18,0.07,0.09,0.99,0.09,0.99,2.91,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",1.26,0.22,0.14,0.96,0.14,0.96,3.05,0.1,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",1.11,0.36,0.1,0.9,0.1,0.9,2.41,0.28,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",1.04,0.0,0.2,1.0,0.19,1.0,2.15,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",1.08,0.07,0.13,1.0,0.11,1.0,2.36,0.01,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",1.1,0.19,0.1,0.98,0.08,0.98,2.46,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",1.05,0.27,0.12,0.96,0.1,0.96,2.39,0.12,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",1.07,0.0,0.08,1.0,0.07,1.0,2.47,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",1.18,0.07,0.09,0.99,0.09,0.99,2.91,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",1.26,0.22,0.14,0.96,0.14,0.96,3.05,0.1,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",1.11,0.36,0.1,0.9,0.1,0.9,2.41,0.28,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",1.04,0.0,0.2,1.0,0.19,1.0,2.15,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",1.08,0.07,0.13,1.0,0.11,1.0,2.36,0.01,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",1.1,0.19,0.1,0.98,0.08,0.98,2.46,0.06,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",1.05,0.27,0.12,0.96,0.1,0.96,2.39,0.12,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",1.24,0.0,0.06,1.0,0.07,1.0,2.85,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",1.08,1.11,0.18,0.21,0.15,0.2,2.26,2.25,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",1.23,1.31,0.0,0.0,0.02,0.01,2.73,2.82,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",1.23,1.31,0.0,0.0,0.02,0.01,2.73,2.82,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",1.31,0.0,0.21,1.0,0.23,1.0,3.29,0.0,highest of its class,highest of its class,highest of its class,highest of its class
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",1.07,1.1,0.18,0.22,0.14,0.2,2.3,2.24,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",1.23,1.31,0.0,0.0,0.02,0.01,2.73,2.82,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",1.23,1.31,0.0,0.0,0.02,0.01,2.73,2.82,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",1.24,0.0,0.06,1.0,0.07,1.0,2.85,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",1.08,1.11,0.18,0.21,0.15,0.2,2.26,2.25,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",1.23,1.31,0.0,0.0,0.02,0.01,2.73,2.82,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",1.23,1.31,0.0,0.0,0.02,0.01,2.73,2.82,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",1.31,0.0,0.21,1.0,0.23,1.0,3.29,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",1.07,1.1,0.18,0.22,0.14,0.2,2.3,2.24,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",1.23,1.31,0.0,0.0,0.02,0.01,2.73,2.82,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",1.23,1.31,0.0,0.0,0.02,0.01,2.73,2.82,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",1.24,0.0,0.06,1.0,0.07,1.0,2.85,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",1.08,1.11,0.18,0.21,0.15,0.2,2.26,2.25,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",1.23,1.31,0.0,0.0,0.02,0.01,2.73,2.82,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",1.23,1.31,0.0,0.0,0.02,0.01,2.73,2.82,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",1.31,0.0,0.21,1.0,0.23,1.0,3.29,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",1.07,1.1,0.18,0.22,0.14,0.2,2.3,2.24,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",1.23,1.31,0.0,0.0,0.02,0.01,2.73,2.82,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",1.23,1.31,0.0,0.0,0.02,0.01,2.73,2.82,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",1.19,0.0,0.04,1.0,0.01,1.0,2.63,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",1.19,0.0,0.09,1.0,0.09,1.0,2.91,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",1.19,0.0,0.04,1.0,0.01,1.0,2.63,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",1.19,0.0,0.09,1.0,0.09,1.0,2.91,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",1.19,0.0,0.04,1.0,0.01,1.0,2.63,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",1.19,0.0,0.09,1.0,0.09,1.0,2.91,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",1.23,1.32,0.0,0.0,0.0,0.0,2.67,2.8,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 50, n_estimators: 100, max_features: auto",0.86,0.31,0.4,0.94,0.39,0.94,1.62,0.18,lowest of its class,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 50, n_estimators: 200, max_features: auto",0.86,0.3,0.41,0.94,0.41,0.94,1.57,0.17,-,highest of its class,highest of its class,lowest of its class
RandomForestRegressor,"criterion: squared_error, max_depth: 100, n_estimators: 100, max_features: auto",0.86,0.31,0.4,0.94,0.39,0.94,1.62,0.18,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 100, n_estimators: 200, max_features: auto",0.86,0.3,0.41,0.94,0.41,0.94,1.57,0.17,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 200, n_estimators: 100, max_features: auto",0.86,0.31,0.4,0.94,0.39,0.94,1.62,0.18,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 200, n_estimators: 200, max_features: auto",0.86,0.3,0.41,0.94,0.41,0.94,1.57,0.17,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 50, n_estimators: 100, max_features: auto",0.86,0.31,0.4,0.94,0.39,0.94,1.62,0.18,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 50, n_estimators: 200, max_features: auto",0.86,0.31,0.41,0.94,0.4,0.94,1.59,0.17,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 100, n_estimators: 100, max_features: auto",0.86,0.31,0.4,0.94,0.39,0.94,1.62,0.18,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 100, n_estimators: 200, max_features: auto",0.86,0.31,0.41,0.94,0.4,0.94,1.59,0.17,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 200, n_estimators: 100, max_features: auto",0.86,0.31,0.4,0.94,0.39,0.94,1.62,0.18,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 200, n_estimators: 200, max_features: auto",0.86,0.31,0.41,0.94,0.4,0.94,1.59,0.17,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 50, n_estimators: 100, max_features: auto",0.87,0.32,0.37,0.93,0.37,0.93,1.68,0.19,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 50, n_estimators: 200, max_features: auto",0.88,0.32,0.38,0.93,0.37,0.93,1.67,0.19,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 100, n_estimators: 100, max_features: auto",0.87,0.32,0.37,0.93,0.37,0.93,1.68,0.19,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 100, n_estimators: 200, max_features: auto",0.88,0.32,0.38,0.93,0.37,0.93,1.67,0.19,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 200, n_estimators: 100, max_features: auto",0.87,0.32,0.37,0.93,0.37,0.93,1.68,0.19,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 200, n_estimators: 200, max_features: auto",0.88,0.32,0.38,0.93,0.37,0.93,1.67,0.19,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 50, n_estimators: 100, max_features: auto",0.98,0.36,0.31,0.92,0.3,0.92,1.85,0.22,highest of its class,lowest of its class,lowest of its class,highest of its class
RandomForestRegressor,"criterion: poisson, max_depth: 50, n_estimators: 200, max_features: auto",0.97,0.36,0.33,0.92,0.33,0.92,1.79,0.22,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 100, n_estimators: 100, max_features: auto",0.97,0.36,0.32,0.92,0.31,0.92,1.83,0.22,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 100, n_estimators: 200, max_features: auto",0.97,0.36,0.33,0.92,0.33,0.92,1.79,0.21,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 200, n_estimators: 100, max_features: auto",0.97,0.36,0.32,0.92,0.31,0.92,1.83,0.22,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 200, n_estimators: 200, max_features: auto",0.97,0.36,0.33,0.92,0.33,0.92,1.79,0.21,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: auto, n_neighbors: 50",1.0,0.96,0.29,0.44,0.29,0.44,1.88,1.57,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: auto, n_neighbors: 100",1.06,1.07,0.26,0.33,0.26,0.33,1.98,1.87,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: auto, n_neighbors: 200",1.13,1.19,0.17,0.2,0.17,0.2,2.22,2.25,highest of its class,lowest of its class,lowest of its class,highest of its class
KNeighborsRegressor,"weights: uniform, algorithm: ball_tree, n_neighbors: 50",1.0,0.96,0.29,0.44,0.29,0.44,1.88,1.57,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: ball_tree, n_neighbors: 100",1.06,1.07,0.26,0.33,0.26,0.33,1.98,1.87,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: ball_tree, n_neighbors: 200",1.13,1.19,0.17,0.2,0.17,0.2,2.22,2.25,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: auto, n_neighbors: 50",0.92,0.0,0.37,1.0,0.37,1.0,1.67,0.0,lowest of its class,highest of its class,highest of its class,lowest of its class
KNeighborsRegressor,"weights: distance, algorithm: auto, n_neighbors: 100",0.98,0.0,0.33,1.0,0.33,1.0,1.78,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: auto, n_neighbors: 200",1.05,0.0,0.25,1.0,0.25,1.0,1.99,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: ball_tree, n_neighbors: 50",0.92,0.0,0.37,1.0,0.37,1.0,1.67,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: ball_tree, n_neighbors: 100",0.98,0.0,0.33,1.0,0.33,1.0,1.78,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: ball_tree, n_neighbors: 200",1.05,0.0,0.25,1.0,0.25,1.0,1.99,0.0,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.1, loss: linear",0.95,0.83,0.36,0.6,0.36,0.6,1.71,1.12,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.1, loss: square",0.99,0.83,0.33,0.62,0.33,0.61,1.78,1.08,highest of its class,lowest of its class,lowest of its class,highest of its class
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.1, loss: exponential",0.96,0.84,0.33,0.59,0.33,0.59,1.78,1.16,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.5, loss: linear",0.95,0.83,0.4,0.66,0.39,0.64,1.63,1.01,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.5, loss: square",0.95,0.79,0.39,0.69,0.38,0.67,1.64,0.92,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.5, loss: exponential",0.93,0.81,0.41,0.66,0.4,0.65,1.59,0.98,lowest of its class,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.9, loss: linear",0.93,0.81,0.42,0.68,0.41,0.66,1.56,0.95,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.9, loss: square",0.96,0.79,0.4,0.68,0.39,0.67,1.62,0.92,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.9, loss: exponential",0.94,0.83,0.43,0.67,0.42,0.65,1.55,0.97,-,highest of its class,highest of its class,lowest of its class
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.1, loss: linear",0.95,0.82,0.37,0.63,0.37,0.63,1.68,1.05,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.1, loss: square",0.96,0.83,0.37,0.64,0.37,0.63,1.68,1.03,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.1, loss: exponential",0.94,0.82,0.36,0.62,0.36,0.62,1.7,1.06,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.5, loss: linear",0.96,0.83,0.4,0.67,0.39,0.65,1.63,0.98,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.5, loss: square",0.97,0.79,0.37,0.69,0.37,0.68,1.69,0.9,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.5, loss: exponential",0.95,0.82,0.4,0.68,0.39,0.66,1.63,0.96,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.9, loss: linear",0.97,0.81,0.39,0.68,0.38,0.66,1.65,0.94,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.9, loss: square",0.98,0.78,0.36,0.7,0.36,0.69,1.71,0.88,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.9, loss: exponential",0.96,0.84,0.41,0.67,0.4,0.65,1.59,0.99,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.1, loss: linear",0.94,0.82,0.39,0.66,0.39,0.65,1.63,0.99,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.1, loss: square",0.95,0.82,0.4,0.67,0.39,0.65,1.63,0.98,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.1, loss: exponential",0.93,0.82,0.4,0.66,0.4,0.64,1.6,1.0,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.5, loss: linear",0.97,0.83,0.4,0.67,0.38,0.65,1.64,0.97,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.5, loss: square",0.98,0.8,0.37,0.68,0.36,0.67,1.69,0.92,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.5, loss: exponential",0.98,0.83,0.4,0.68,0.38,0.65,1.65,0.97,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.9, loss: linear",0.99,0.83,0.38,0.69,0.37,0.66,1.68,0.94,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.9, loss: square",0.99,0.8,0.37,0.69,0.36,0.68,1.71,0.9,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.9, loss: exponential",0.97,0.84,0.41,0.68,0.4,0.65,1.61,0.97,-,-,-,-
GaussianProcessRegressor,alpha: 1e-10,40.36,0.0,2300.26,1.0,2312.65,1.0,6163.52,0.0,highest of its class,highest of its class,highest of its class,highest of its class
GaussianProcessRegressor,alpha: 1e-05,2.23,0.04,3.43,0.99,3.44,0.99,11.82,0.01,-,-,-,-
GaussianProcessRegressor,alpha: 0.001,1.26,0.1,0.14,0.98,0.17,0.98,3.12,0.04,lowest of its class,lowest of its class,lowest of its class,lowest of its class
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 100",1.23,1.18,0.16,0.2,0.04,0.14,2.57,2.4,highest of its class,lowest of its class,lowest of its class,highest of its class
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 200",0.94,0.91,0.41,0.47,0.4,0.46,1.61,1.5,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 300",0.89,0.85,0.46,0.54,0.46,0.54,1.44,1.28,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 100",1.14,1.1,0.2,0.26,0.13,0.24,2.31,2.14,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 200",0.92,0.87,0.44,0.52,0.43,0.52,1.53,1.36,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 300",0.87,0.79,0.49,0.6,0.49,0.6,1.36,1.13,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 100",1.02,0.99,0.33,0.39,0.3,0.38,1.88,1.73,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 200",0.88,0.83,0.48,0.56,0.48,0.56,1.39,1.22,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 300",0.84,0.78,0.51,0.62,0.51,0.62,1.3,1.06,lowest of its class,highest of its class,highest of its class,lowest of its class

model,params,mean_test_mean_absolute_error,mean_train_mean_absolute_error,mean_test_explained_variance_score,mean_train_explained_variance_score,mean_test_r2_score,mean_train_r2_score,mean_test_mean_squared_error,mean_train_mean_squared_error,ranking_test_ranking_absolute_error,ranking_test_explained_variance_score,ranking_test_r2_score,ranking_test_ranking_squared_error
LinearRegression,fit_intercept: True,0.62,0.57,0.25,0.29,0.24,0.29,0.63,0.54,lowest of its class,lowest of its class,lowest of its class,lowest of its class
LinearRegression,fit_intercept: False,0.62,0.57,0.25,0.29,0.24,0.29,0.63,0.54,-,-,-,-
SVR,"C: 1, gamma: auto, kernel: rbf",0.55,0.44,0.36,0.51,0.36,0.51,0.54,0.38,-,highest of its class,highest of its class,-
SVR,"C: 1, gamma: auto, kernel: linear",0.61,0.57,0.25,0.29,0.25,0.29,0.63,0.55,highest of its class,lowest of its class,lowest of its class,highest of its class
SVR,"C: 1, gamma: scale, kernel: rbf",0.55,0.44,0.36,0.51,0.36,0.51,0.54,0.38,-,-,-,-
SVR,"C: 1, gamma: scale, kernel: linear",0.61,0.57,0.25,0.29,0.25,0.29,0.63,0.55,-,-,-,-
SVR,"C: 10, gamma: auto, kernel: rbf",0.54,0.35,0.36,0.65,0.36,0.65,0.53,0.27,lowest of its class,-,-,lowest of its class
SVR,"C: 10, gamma: auto, kernel: linear",0.61,0.57,0.25,0.29,0.25,0.29,0.63,0.55,-,-,-,-
SVR,"C: 10, gamma: scale, kernel: rbf",0.54,0.35,0.36,0.65,0.36,0.65,0.53,0.27,-,-,-,-
SVR,"C: 10, gamma: scale, kernel: linear",0.61,0.57,0.25,0.29,0.25,0.29,0.63,0.55,-,-,-,-
SVR,"C: 20, gamma: auto, kernel: rbf",0.55,0.31,0.34,0.7,0.34,0.7,0.56,0.23,-,-,-,-
SVR,"C: 20, gamma: auto, kernel: linear",0.61,0.57,0.25,0.29,0.25,0.29,0.63,0.55,-,-,-,-
SVR,"C: 20, gamma: scale, kernel: rbf",0.55,0.31,0.34,0.7,0.34,0.7,0.56,0.23,-,-,-,-
SVR,"C: 20, gamma: scale, kernel: linear",0.61,0.57,0.25,0.29,0.25,0.29,0.63,0.55,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",0.53,0.0,0.06,1.0,0.05,1.0,0.79,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,highest of its class,lowest of its class,lowest of its class,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",0.52,0.0,0.11,1.0,0.1,1.0,0.76,0.0,lowest of its class,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",0.7,0.66,0.14,0.17,0.14,0.17,0.72,0.64,-,highest of its class,highest of its class,lowest of its class
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",0.53,0.0,0.06,1.0,0.05,1.0,0.79,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",0.52,0.0,0.11,1.0,0.1,1.0,0.76,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",0.7,0.66,0.14,0.17,0.14,0.17,0.72,0.64,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",0.53,0.0,0.06,1.0,0.05,1.0,0.79,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",0.52,0.0,0.11,1.0,0.1,1.0,0.76,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",0.7,0.66,0.14,0.17,0.14,0.17,0.72,0.64,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",0.53,0.0,0.06,1.0,0.05,1.0,0.79,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",0.57,0.0,0.08,1.0,0.09,1.0,0.91,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",0.57,0.15,0.08,0.88,0.06,0.88,0.79,0.09,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",0.61,0.33,0.13,0.72,0.13,0.72,0.73,0.21,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",0.54,0.0,0.05,1.0,0.05,1.0,0.8,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",0.54,0.0,0.05,1.0,0.05,1.0,0.8,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",0.53,0.03,0.09,0.98,0.08,0.98,0.77,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",0.58,0.14,0.1,0.9,0.09,0.9,0.76,0.08,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",0.53,0.0,0.06,1.0,0.05,1.0,0.79,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",0.57,0.0,0.08,1.0,0.09,1.0,0.91,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",0.57,0.15,0.08,0.88,0.06,0.88,0.79,0.09,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",0.61,0.33,0.13,0.72,0.13,0.72,0.73,0.21,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",0.54,0.0,0.05,1.0,0.05,1.0,0.8,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",0.54,0.0,0.05,1.0,0.05,1.0,0.8,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",0.53,0.03,0.09,0.98,0.08,0.98,0.77,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",0.58,0.14,0.1,0.9,0.09,0.9,0.76,0.08,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",0.53,0.0,0.06,1.0,0.05,1.0,0.79,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",0.57,0.0,0.08,1.0,0.09,1.0,0.91,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",0.57,0.15,0.08,0.88,0.06,0.88,0.79,0.09,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",0.61,0.33,0.13,0.72,0.13,0.72,0.73,0.21,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",0.54,0.0,0.05,1.0,0.05,1.0,0.8,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",0.54,0.0,0.05,1.0,0.05,1.0,0.8,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",0.53,0.03,0.09,0.98,0.08,0.98,0.77,0.02,-,-,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",0.58,0.14,0.1,0.9,0.09,0.9,0.76,0.08,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",0.57,0.0,0.09,1.0,0.09,1.0,0.92,0.0,-,-,-,highest of its class
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",0.55,0.0,0.03,0.99,0.02,0.99,0.82,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",0.57,0.0,0.09,1.0,0.09,1.0,0.92,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",0.58,0.0,0.07,1.0,0.07,1.0,0.89,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",0.57,0.0,0.09,1.0,0.09,1.0,0.92,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",0.58,0.0,0.07,1.0,0.07,1.0,0.89,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",0.67,0.62,0.0,0.0,0.04,0.01,0.87,0.78,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.0",0.57,0.0,0.06,1.0,0.1,1.0,0.92,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.1",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.5",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: random, min_impurity_decrease: 0.9",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.0",0.59,0.04,0.04,0.96,0.08,0.96,0.9,0.03,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.1",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.5",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, splitter: best, min_impurity_decrease: 0.9",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.0",0.57,0.0,0.06,1.0,0.1,1.0,0.92,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.1",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.5",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: random, min_impurity_decrease: 0.9",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.0",0.57,0.0,0.04,1.0,0.09,1.0,0.91,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.1",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.5",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, splitter: best, min_impurity_decrease: 0.9",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.0",0.57,0.0,0.06,1.0,0.1,1.0,0.92,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.1",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.5",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: random, min_impurity_decrease: 0.9",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.0",0.57,0.0,0.04,1.0,0.09,1.0,0.91,0.0,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.1",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.5",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, splitter: best, min_impurity_decrease: 0.9",0.7,0.65,0.0,0.0,0.01,0.0,0.84,0.77,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 50, n_estimators: 100, max_features: auto",0.49,0.16,0.46,0.93,0.45,0.93,0.46,0.05,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 50, n_estimators: 200, max_features: auto",0.48,0.16,0.47,0.94,0.46,0.94,0.45,0.05,lowest of its class,highest of its class,highest of its class,lowest of its class
RandomForestRegressor,"criterion: squared_error, max_depth: 100, n_estimators: 100, max_features: auto",0.49,0.16,0.46,0.93,0.45,0.93,0.46,0.05,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 100, n_estimators: 200, max_features: auto",0.48,0.16,0.47,0.94,0.46,0.94,0.45,0.05,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 200, n_estimators: 100, max_features: auto",0.49,0.16,0.46,0.93,0.45,0.93,0.46,0.05,-,-,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 200, n_estimators: 200, max_features: auto",0.48,0.16,0.47,0.94,0.46,0.94,0.45,0.05,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 50, n_estimators: 100, max_features: auto",0.49,0.16,0.46,0.93,0.45,0.93,0.46,0.05,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 50, n_estimators: 200, max_features: auto",0.48,0.16,0.47,0.94,0.46,0.94,0.45,0.05,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 100, n_estimators: 100, max_features: auto",0.49,0.16,0.46,0.93,0.45,0.93,0.46,0.05,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 100, n_estimators: 200, max_features: auto",0.48,0.16,0.47,0.94,0.46,0.94,0.45,0.05,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 200, n_estimators: 100, max_features: auto",0.49,0.16,0.46,0.93,0.45,0.93,0.46,0.05,-,-,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 200, n_estimators: 200, max_features: auto",0.48,0.16,0.47,0.94,0.46,0.94,0.45,0.05,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 50, n_estimators: 100, max_features: auto",0.52,0.29,0.38,0.75,0.38,0.75,0.52,0.19,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 50, n_estimators: 200, max_features: auto",0.52,0.28,0.39,0.75,0.39,0.75,0.51,0.19,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 100, n_estimators: 100, max_features: auto",0.5,0.19,0.44,0.91,0.43,0.91,0.47,0.07,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 100, n_estimators: 200, max_features: auto",0.5,0.18,0.45,0.92,0.44,0.92,0.47,0.06,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 200, n_estimators: 100, max_features: auto",0.5,0.18,0.44,0.92,0.44,0.92,0.47,0.06,-,-,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 200, n_estimators: 200, max_features: auto",0.49,0.18,0.45,0.92,0.44,0.92,0.47,0.06,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 50, n_estimators: 100, max_features: auto",0.62,0.42,0.23,0.61,0.21,0.61,0.66,0.3,highest of its class,lowest of its class,lowest of its class,-
RandomForestRegressor,"criterion: poisson, max_depth: 50, n_estimators: 200, max_features: auto",0.62,0.42,0.23,0.61,0.21,0.61,0.67,0.3,-,-,-,highest of its class
RandomForestRegressor,"criterion: poisson, max_depth: 100, n_estimators: 100, max_features: auto",0.56,0.19,0.28,0.9,0.24,0.9,0.64,0.08,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 100, n_estimators: 200, max_features: auto",0.56,0.19,0.28,0.9,0.24,0.9,0.64,0.08,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 200, n_estimators: 100, max_features: auto",0.56,0.18,0.28,0.92,0.24,0.91,0.63,0.07,-,-,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 200, n_estimators: 200, max_features: auto",0.56,0.18,0.29,0.92,0.25,0.91,0.63,0.07,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: auto, n_neighbors: 50",0.6,0.55,0.3,0.37,0.29,0.37,0.59,0.48,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: auto, n_neighbors: 100",0.61,0.56,0.29,0.33,0.28,0.33,0.61,0.51,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: auto, n_neighbors: 200",0.63,0.58,0.26,0.3,0.25,0.3,0.63,0.54,highest of its class,lowest of its class,lowest of its class,highest of its class
KNeighborsRegressor,"weights: uniform, algorithm: ball_tree, n_neighbors: 50",0.6,0.55,0.3,0.37,0.29,0.37,0.59,0.48,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: ball_tree, n_neighbors: 100",0.61,0.56,0.29,0.33,0.28,0.33,0.61,0.51,-,-,-,-
KNeighborsRegressor,"weights: uniform, algorithm: ball_tree, n_neighbors: 200",0.63,0.58,0.26,0.3,0.25,0.3,0.63,0.54,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: auto, n_neighbors: 50",0.46,0.0,0.45,1.0,0.44,1.0,0.47,0.0,lowest of its class,highest of its class,highest of its class,lowest of its class
KNeighborsRegressor,"weights: distance, algorithm: auto, n_neighbors: 100",0.46,0.0,0.44,1.0,0.43,1.0,0.48,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: auto, n_neighbors: 200",0.47,0.0,0.43,1.0,0.41,1.0,0.49,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: ball_tree, n_neighbors: 50",0.46,0.0,0.45,1.0,0.44,1.0,0.47,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: ball_tree, n_neighbors: 100",0.46,0.0,0.44,1.0,0.43,1.0,0.48,0.0,-,-,-,-
KNeighborsRegressor,"weights: distance, algorithm: ball_tree, n_neighbors: 200",0.47,0.0,0.43,1.0,0.41,1.0,0.49,0.0,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.1, loss: linear",0.63,0.57,0.26,0.34,0.25,0.34,0.63,0.51,-,lowest of its class,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.1, loss: square",0.62,0.57,0.27,0.33,0.26,0.33,0.62,0.51,lowest of its class,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.1, loss: exponential",0.63,0.57,0.26,0.34,0.25,0.34,0.63,0.51,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.5, loss: linear",0.62,0.57,0.28,0.34,0.26,0.34,0.62,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.5, loss: square",0.62,0.57,0.29,0.36,0.27,0.35,0.61,0.5,-,highest of its class,-,lowest of its class
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.5, loss: exponential",0.63,0.57,0.28,0.36,0.26,0.35,0.62,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.9, loss: linear",0.62,0.56,0.28,0.35,0.26,0.35,0.62,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.9, loss: square",0.62,0.57,0.28,0.36,0.27,0.35,0.61,0.49,-,-,-,-
AdaBoostRegressor,"n_estimators: 50, learning_rate: 0.9, loss: exponential",0.63,0.57,0.28,0.35,0.25,0.34,0.62,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.1, loss: linear",0.62,0.57,0.28,0.35,0.27,0.35,0.61,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.1, loss: square",0.62,0.57,0.28,0.35,0.27,0.35,0.61,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.1, loss: exponential",0.62,0.57,0.28,0.35,0.26,0.35,0.62,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.5, loss: linear",0.62,0.57,0.28,0.34,0.26,0.34,0.62,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.5, loss: square",0.63,0.57,0.28,0.35,0.26,0.35,0.62,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.5, loss: exponential",0.63,0.58,0.28,0.35,0.25,0.34,0.63,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.9, loss: linear",0.62,0.56,0.28,0.35,0.26,0.35,0.62,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.9, loss: square",0.63,0.57,0.27,0.35,0.25,0.34,0.63,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 100, learning_rate: 0.9, loss: exponential",0.63,0.57,0.28,0.35,0.25,0.34,0.62,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.1, loss: linear",0.62,0.57,0.28,0.35,0.27,0.35,0.61,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.1, loss: square",0.62,0.57,0.29,0.36,0.28,0.35,0.61,0.49,-,-,highest of its class,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.1, loss: exponential",0.62,0.57,0.29,0.36,0.27,0.36,0.61,0.49,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.5, loss: linear",0.62,0.57,0.28,0.34,0.26,0.34,0.62,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.5, loss: square",0.63,0.57,0.27,0.34,0.25,0.34,0.63,0.51,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.5, loss: exponential",0.64,0.59,0.27,0.34,0.23,0.32,0.64,0.52,highest of its class,-,lowest of its class,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.9, loss: linear",0.62,0.56,0.28,0.35,0.26,0.35,0.62,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.9, loss: square",0.63,0.57,0.27,0.35,0.25,0.34,0.62,0.5,-,-,-,-
AdaBoostRegressor,"n_estimators: 200, learning_rate: 0.9, loss: exponential",0.64,0.59,0.26,0.33,0.23,0.32,0.65,0.52,-,-,-,highest of its class
GaussianProcessRegressor,alpha: 1e-10,0.9,0.0,1.29,1.0,1.63,1.0,2.2,0.0,lowest of its class,highest of its class,lowest of its class,lowest of its class
GaussianProcessRegressor,alpha: 1e-05,0.9,0.0,1.29,1.0,1.63,1.0,2.2,0.0,-,-,-,-
GaussianProcessRegressor,alpha: 0.001,0.9,0.0,1.28,1.0,1.63,1.0,2.2,0.0,-,lowest of its class,-,-
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 100",0.6,0.54,0.26,0.36,0.26,0.36,0.62,0.49,highest of its class,lowest of its class,lowest of its class,highest of its class
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 200",0.58,0.51,0.34,0.44,0.34,0.44,0.55,0.43,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 300",0.57,0.49,0.35,0.48,0.35,0.48,0.54,0.4,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 100",0.58,0.51,0.35,0.43,0.35,0.43,0.55,0.44,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 200",0.57,0.48,0.36,0.5,0.35,0.5,0.54,0.38,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 300",0.56,0.46,0.36,0.55,0.36,0.54,0.54,0.35,lowest of its class,-,-,-
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 100",0.58,0.5,0.36,0.45,0.35,0.45,0.54,0.42,-,-,-,-
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 200",0.56,0.47,0.38,0.52,0.38,0.52,0.52,0.37,-,highest of its class,highest of its class,lowest of its class
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 300",0.56,0.44,0.37,0.57,0.37,0.57,0.52,0.33,-,-,-,-

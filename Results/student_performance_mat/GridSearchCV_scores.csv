model,params,mean_test_explained_variance_score,mean_train_explained_variance_score,mean_test_r2_score,mean_train_r2_score,ranking_test_explained_variance_score,ranking_test_r2_score
LinearRegression,fit_intercept: True,-0.44,0.55,-0.48,0.55,lowest of its class,lowest of its class
LinearRegression,fit_intercept: False,-0.44,0.55,-0.48,0.55,-,-
SVR,"C: 1, gamma: auto, kernel: rbf",0.12,0.36,0.05,0.36,highest of its class,highest of its class
SVR,"C: 1, gamma: auto, kernel: linear",-0.39,0.44,-0.45,0.43,-,-
SVR,"C: 1, gamma: scale, kernel: rbf",0.12,0.35,0.05,0.35,-,-
SVR,"C: 1, gamma: scale, kernel: linear",-0.39,0.44,-0.45,0.43,-,-
SVR,"C: 10, gamma: auto, kernel: rbf",0.08,0.96,-0.01,0.96,-,-
SVR,"C: 10, gamma: auto, kernel: linear",-0.57,0.4,-0.62,0.4,-,-
SVR,"C: 10, gamma: scale, kernel: rbf",0.07,0.95,-0.02,0.95,-,-
SVR,"C: 10, gamma: scale, kernel: linear",-0.57,0.4,-0.62,0.4,-,-
SVR,"C: 20, gamma: auto, kernel: rbf",0.03,0.99,-0.05,0.99,-,-
SVR,"C: 20, gamma: auto, kernel: linear",-0.58,0.4,-0.63,0.4,lowest of its class,lowest of its class
SVR,"C: 20, gamma: scale, kernel: rbf",0.03,0.99,-0.06,0.99,-,-
SVR,"C: 20, gamma: scale, kernel: linear",-0.58,0.4,-0.63,0.4,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, min_impurity_decrease: 0.0, splitter: random",-0.5,1.0,-0.55,1.0,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, min_impurity_decrease: 0.0, splitter: best",-0.42,1.0,-0.47,1.0,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, min_impurity_decrease: 0.1, splitter: random",-0.26,0.93,-0.3,0.93,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, min_impurity_decrease: 0.1, splitter: best",-0.29,0.94,-0.34,0.94,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, min_impurity_decrease: 0.5, splitter: random",0.0,0.56,-0.05,0.56,highest of its class,highest of its class
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, min_impurity_decrease: 0.5, splitter: best",-0.47,0.63,-0.51,0.63,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, min_impurity_decrease: 0.9, splitter: random",-0.03,0.35,-0.06,0.35,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 100, min_impurity_decrease: 0.9, splitter: best",-0.09,0.39,-0.1,0.39,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, min_impurity_decrease: 0.0, splitter: random",-0.5,1.0,-0.55,1.0,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, min_impurity_decrease: 0.0, splitter: best",-0.42,1.0,-0.47,1.0,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, min_impurity_decrease: 0.1, splitter: random",-0.26,0.93,-0.3,0.93,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, min_impurity_decrease: 0.1, splitter: best",-0.29,0.94,-0.34,0.94,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, min_impurity_decrease: 0.5, splitter: random",0.0,0.56,-0.05,0.56,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, min_impurity_decrease: 0.5, splitter: best",-0.47,0.63,-0.51,0.63,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, min_impurity_decrease: 0.9, splitter: random",-0.03,0.35,-0.06,0.35,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 500, min_impurity_decrease: 0.9, splitter: best",-0.09,0.39,-0.1,0.39,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, min_impurity_decrease: 0.0, splitter: random",-0.5,1.0,-0.55,1.0,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, min_impurity_decrease: 0.0, splitter: best",-0.42,1.0,-0.47,1.0,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, min_impurity_decrease: 0.1, splitter: random",-0.26,0.93,-0.3,0.93,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, min_impurity_decrease: 0.1, splitter: best",-0.29,0.94,-0.34,0.94,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, min_impurity_decrease: 0.5, splitter: random",0.0,0.56,-0.05,0.56,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, min_impurity_decrease: 0.5, splitter: best",-0.47,0.63,-0.51,0.63,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, min_impurity_decrease: 0.9, splitter: random",-0.03,0.35,-0.06,0.35,-,-
DecisionTreeRegressor,"criterion: squared_error, max_depth: 1000, min_impurity_decrease: 0.9, splitter: best",-0.09,0.39,-0.1,0.39,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, min_impurity_decrease: 0.0, splitter: random",-0.56,1.0,-0.61,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, min_impurity_decrease: 0.0, splitter: best",-0.7,1.0,-0.75,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, min_impurity_decrease: 0.1, splitter: random",-0.53,1.0,-0.57,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, min_impurity_decrease: 0.1, splitter: best",-0.6,1.0,-0.65,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, min_impurity_decrease: 0.5, splitter: random",-0.57,1.0,-0.63,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, min_impurity_decrease: 0.5, splitter: best",-0.62,1.0,-0.67,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, min_impurity_decrease: 0.9, splitter: random",-0.46,0.99,-0.52,0.99,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 100, min_impurity_decrease: 0.9, splitter: best",-0.64,0.99,-0.68,0.99,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, min_impurity_decrease: 0.0, splitter: random",-0.56,1.0,-0.61,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, min_impurity_decrease: 0.0, splitter: best",-0.7,1.0,-0.75,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, min_impurity_decrease: 0.1, splitter: random",-0.53,1.0,-0.57,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, min_impurity_decrease: 0.1, splitter: best",-0.6,1.0,-0.65,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, min_impurity_decrease: 0.5, splitter: random",-0.57,1.0,-0.63,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, min_impurity_decrease: 0.5, splitter: best",-0.62,1.0,-0.67,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, min_impurity_decrease: 0.9, splitter: random",-0.46,0.99,-0.52,0.99,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 500, min_impurity_decrease: 0.9, splitter: best",-0.64,0.99,-0.68,0.99,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, min_impurity_decrease: 0.0, splitter: random",-0.56,1.0,-0.61,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, min_impurity_decrease: 0.0, splitter: best",-0.7,1.0,-0.75,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, min_impurity_decrease: 0.1, splitter: random",-0.53,1.0,-0.57,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, min_impurity_decrease: 0.1, splitter: best",-0.6,1.0,-0.65,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, min_impurity_decrease: 0.5, splitter: random",-0.57,1.0,-0.63,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, min_impurity_decrease: 0.5, splitter: best",-0.62,1.0,-0.67,1.0,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, min_impurity_decrease: 0.9, splitter: random",-0.46,0.99,-0.52,0.99,-,-
DecisionTreeRegressor,"criterion: friedman_mse, max_depth: 1000, min_impurity_decrease: 0.9, splitter: best",-0.64,0.99,-0.68,0.99,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, min_impurity_decrease: 0.0, splitter: random",-0.63,1.0,-0.84,1.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, min_impurity_decrease: 0.0, splitter: best",-1.13,1.0,-1.21,1.0,lowest of its class,lowest of its class
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, min_impurity_decrease: 0.1, splitter: random",-0.06,0.4,-0.19,0.4,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, min_impurity_decrease: 0.1, splitter: best",-0.03,0.48,-0.08,0.47,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, min_impurity_decrease: 0.5, splitter: random",0.0,0.0,-0.06,-0.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, min_impurity_decrease: 0.5, splitter: best",0.0,0.0,-0.06,-0.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, min_impurity_decrease: 0.9, splitter: random",0.0,0.0,-0.06,-0.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 100, min_impurity_decrease: 0.9, splitter: best",0.0,0.0,-0.06,-0.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, min_impurity_decrease: 0.0, splitter: random",-0.63,1.0,-0.84,1.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, min_impurity_decrease: 0.0, splitter: best",-1.13,1.0,-1.21,1.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, min_impurity_decrease: 0.1, splitter: random",-0.06,0.4,-0.19,0.4,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, min_impurity_decrease: 0.1, splitter: best",-0.03,0.48,-0.08,0.47,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, min_impurity_decrease: 0.5, splitter: random",0.0,0.0,-0.06,-0.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, min_impurity_decrease: 0.5, splitter: best",0.0,0.0,-0.06,-0.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, min_impurity_decrease: 0.9, splitter: random",0.0,0.0,-0.06,-0.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 500, min_impurity_decrease: 0.9, splitter: best",0.0,0.0,-0.06,-0.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, min_impurity_decrease: 0.0, splitter: random",-0.63,1.0,-0.84,1.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, min_impurity_decrease: 0.0, splitter: best",-1.13,1.0,-1.21,1.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, min_impurity_decrease: 0.1, splitter: random",-0.06,0.4,-0.19,0.4,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, min_impurity_decrease: 0.1, splitter: best",-0.03,0.48,-0.08,0.47,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, min_impurity_decrease: 0.5, splitter: random",0.0,0.0,-0.06,-0.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, min_impurity_decrease: 0.5, splitter: best",0.0,0.0,-0.06,-0.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, min_impurity_decrease: 0.9, splitter: random",0.0,0.0,-0.06,-0.0,-,-
DecisionTreeRegressor,"criterion: absolute_error, max_depth: 1000, min_impurity_decrease: 0.9, splitter: best",0.0,0.0,-0.06,-0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, min_impurity_decrease: 0.0, splitter: random",-0.67,1.0,-0.73,1.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, min_impurity_decrease: 0.0, splitter: best",-0.66,1.0,-0.71,1.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, min_impurity_decrease: 0.1, splitter: random",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, min_impurity_decrease: 0.1, splitter: best",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, min_impurity_decrease: 0.5, splitter: random",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, min_impurity_decrease: 0.5, splitter: best",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, min_impurity_decrease: 0.9, splitter: random",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 100, min_impurity_decrease: 0.9, splitter: best",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, min_impurity_decrease: 0.0, splitter: random",-0.67,1.0,-0.73,1.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, min_impurity_decrease: 0.0, splitter: best",-0.66,1.0,-0.71,1.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, min_impurity_decrease: 0.1, splitter: random",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, min_impurity_decrease: 0.1, splitter: best",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, min_impurity_decrease: 0.5, splitter: random",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, min_impurity_decrease: 0.5, splitter: best",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, min_impurity_decrease: 0.9, splitter: random",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 500, min_impurity_decrease: 0.9, splitter: best",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, min_impurity_decrease: 0.0, splitter: random",-0.67,1.0,-0.73,1.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, min_impurity_decrease: 0.0, splitter: best",-0.66,1.0,-0.71,1.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, min_impurity_decrease: 0.1, splitter: random",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, min_impurity_decrease: 0.1, splitter: best",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, min_impurity_decrease: 0.5, splitter: random",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, min_impurity_decrease: 0.5, splitter: best",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, min_impurity_decrease: 0.9, splitter: random",0.0,0.0,-0.06,0.0,-,-
DecisionTreeRegressor,"criterion: poisson, max_depth: 1000, min_impurity_decrease: 0.9, splitter: best",0.0,0.0,-0.06,0.0,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 50, max_features: auto, n_estimators: 100",0.07,0.89,0.01,0.89,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 50, max_features: auto, n_estimators: 200",0.07,0.89,0.02,0.89,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 100, max_features: auto, n_estimators: 100",0.07,0.89,0.01,0.89,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 100, max_features: auto, n_estimators: 200",0.07,0.89,0.02,0.89,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 200, max_features: auto, n_estimators: 100",0.07,0.89,0.01,0.89,-,-
RandomForestRegressor,"criterion: squared_error, max_depth: 200, max_features: auto, n_estimators: 200",0.07,0.89,0.02,0.89,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 50, max_features: auto, n_estimators: 100",0.07,0.89,0.02,0.89,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 50, max_features: auto, n_estimators: 200",0.07,0.89,0.03,0.89,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 100, max_features: auto, n_estimators: 100",0.07,0.89,0.02,0.89,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 100, max_features: auto, n_estimators: 200",0.07,0.89,0.03,0.89,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 200, max_features: auto, n_estimators: 100",0.07,0.89,0.02,0.89,-,-
RandomForestRegressor,"criterion: friedman_mse, max_depth: 200, max_features: auto, n_estimators: 200",0.07,0.89,0.03,0.89,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 50, max_features: auto, n_estimators: 100",0.14,0.88,0.09,0.88,highest of its class,highest of its class
RandomForestRegressor,"criterion: absolute_error, max_depth: 50, max_features: auto, n_estimators: 200",0.13,0.89,0.08,0.89,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 100, max_features: auto, n_estimators: 100",0.14,0.88,0.09,0.88,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 100, max_features: auto, n_estimators: 200",0.13,0.89,0.08,0.89,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 200, max_features: auto, n_estimators: 100",0.14,0.88,0.09,0.88,-,-
RandomForestRegressor,"criterion: absolute_error, max_depth: 200, max_features: auto, n_estimators: 200",0.13,0.89,0.08,0.89,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 50, max_features: auto, n_estimators: 100",-0.17,0.85,-0.24,0.84,lowest of its class,lowest of its class
RandomForestRegressor,"criterion: poisson, max_depth: 50, max_features: auto, n_estimators: 200",-0.17,0.85,-0.24,0.84,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 100, max_features: auto, n_estimators: 100",-0.17,0.85,-0.24,0.84,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 100, max_features: auto, n_estimators: 200",-0.17,0.85,-0.24,0.84,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 200, max_features: auto, n_estimators: 100",-0.17,0.85,-0.24,0.84,-,-
RandomForestRegressor,"criterion: poisson, max_depth: 200, max_features: auto, n_estimators: 200",-0.17,0.85,-0.24,0.84,-,-
KNeighborsRegressor,"algorithm: auto, n_neighbors: 50, weights: uniform",0.03,0.05,-0.03,0.03,-,lowest of its class
KNeighborsRegressor,"algorithm: auto, n_neighbors: 50, weights: distance",0.05,1.0,-0.01,1.0,highest of its class,-
KNeighborsRegressor,"algorithm: auto, n_neighbors: 100, weights: uniform",0.0,0.0,0.0,0.0,lowest of its class,highest of its class
KNeighborsRegressor,"algorithm: auto, n_neighbors: 100, weights: distance",0.0,0.0,0.0,0.0,-,-
KNeighborsRegressor,"algorithm: auto, n_neighbors: 200, weights: uniform",0.0,0.0,0.0,0.0,-,-
KNeighborsRegressor,"algorithm: auto, n_neighbors: 200, weights: distance",0.0,0.0,0.0,0.0,-,-
KNeighborsRegressor,"algorithm: ball_tree, n_neighbors: 50, weights: uniform",0.03,0.05,-0.03,0.03,-,-
KNeighborsRegressor,"algorithm: ball_tree, n_neighbors: 50, weights: distance",0.05,1.0,-0.01,1.0,-,-
KNeighborsRegressor,"algorithm: ball_tree, n_neighbors: 100, weights: uniform",0.0,0.0,0.0,0.0,-,-
KNeighborsRegressor,"algorithm: ball_tree, n_neighbors: 100, weights: distance",0.0,0.0,0.0,0.0,-,-
KNeighborsRegressor,"algorithm: ball_tree, n_neighbors: 200, weights: uniform",0.0,0.0,0.0,0.0,-,-
KNeighborsRegressor,"algorithm: ball_tree, n_neighbors: 200, weights: distance",0.0,0.0,0.0,0.0,-,-
AdaBoostRegressor,"learning_rate: 0.1, loss: linear, n_estimators: 50",0.11,0.69,0.05,0.69,highest of its class,highest of its class
AdaBoostRegressor,"learning_rate: 0.1, loss: linear, n_estimators: 100",0.08,0.73,0.02,0.73,-,-
AdaBoostRegressor,"learning_rate: 0.1, loss: linear, n_estimators: 200",0.05,0.77,-0.01,0.77,-,-
AdaBoostRegressor,"learning_rate: 0.1, loss: square, n_estimators: 50",0.04,0.71,-0.02,0.71,-,-
AdaBoostRegressor,"learning_rate: 0.1, loss: square, n_estimators: 100",0.03,0.75,-0.03,0.75,-,-
AdaBoostRegressor,"learning_rate: 0.1, loss: square, n_estimators: 200",-0.0,0.78,-0.07,0.78,-,-
AdaBoostRegressor,"learning_rate: 0.1, loss: exponential, n_estimators: 50",0.1,0.67,0.05,0.67,-,-
AdaBoostRegressor,"learning_rate: 0.1, loss: exponential, n_estimators: 100",0.07,0.72,0.02,0.72,-,-
AdaBoostRegressor,"learning_rate: 0.1, loss: exponential, n_estimators: 200",0.06,0.76,0.02,0.76,-,-
AdaBoostRegressor,"learning_rate: 0.5, loss: linear, n_estimators: 50",0.01,0.77,-0.03,0.77,-,-
AdaBoostRegressor,"learning_rate: 0.5, loss: linear, n_estimators: 100",0.02,0.79,-0.03,0.79,-,-
AdaBoostRegressor,"learning_rate: 0.5, loss: linear, n_estimators: 200",0.0,0.8,-0.05,0.8,-,-
AdaBoostRegressor,"learning_rate: 0.5, loss: square, n_estimators: 50",-0.02,0.78,-0.1,0.78,-,-
AdaBoostRegressor,"learning_rate: 0.5, loss: square, n_estimators: 100",0.04,0.79,-0.03,0.79,-,-
AdaBoostRegressor,"learning_rate: 0.5, loss: square, n_estimators: 200",0.03,0.81,-0.04,0.81,-,-
AdaBoostRegressor,"learning_rate: 0.5, loss: exponential, n_estimators: 50",0.04,0.75,-0.0,0.75,-,-
AdaBoostRegressor,"learning_rate: 0.5, loss: exponential, n_estimators: 100",0.02,0.77,-0.03,0.77,-,-
AdaBoostRegressor,"learning_rate: 0.5, loss: exponential, n_estimators: 200",0.01,0.79,-0.04,0.79,-,-
AdaBoostRegressor,"learning_rate: 0.9, loss: linear, n_estimators: 50",-0.07,0.78,-0.11,0.78,lowest of its class,lowest of its class
AdaBoostRegressor,"learning_rate: 0.9, loss: linear, n_estimators: 100",-0.06,0.8,-0.11,0.8,-,-
AdaBoostRegressor,"learning_rate: 0.9, loss: linear, n_estimators: 200",-0.03,0.81,-0.09,0.81,-,-
AdaBoostRegressor,"learning_rate: 0.9, loss: square, n_estimators: 50",-0.06,0.8,-0.1,0.8,-,-
AdaBoostRegressor,"learning_rate: 0.9, loss: square, n_estimators: 100",-0.07,0.82,-0.1,0.82,-,-
AdaBoostRegressor,"learning_rate: 0.9, loss: square, n_estimators: 200",-0.03,0.82,-0.08,0.82,-,-
AdaBoostRegressor,"learning_rate: 0.9, loss: exponential, n_estimators: 50",0.06,0.77,-0.0,0.77,-,-
AdaBoostRegressor,"learning_rate: 0.9, loss: exponential, n_estimators: 100",0.03,0.78,-0.02,0.78,-,-
AdaBoostRegressor,"learning_rate: 0.9, loss: exponential, n_estimators: 200",0.03,0.8,-0.02,0.8,-,-
GaussianProcessRegressor,alpha: 1e-10,0.0,1.0,-8.33,1.0,lowest of its class,lowest of its class
GaussianProcessRegressor,alpha: 1e-05,0.0,1.0,-8.33,1.0,-,-
GaussianProcessRegressor,alpha: 0.001,0.0,1.0,-8.33,1.0,-,-
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 100",-0.19,0.1,-2.47,-1.19,-,lowest of its class
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 200",-0.34,0.47,-0.89,0.39,-,-
MLPRegressor,"hidden_layer_sizes: 50, max_iter: 300",-0.37,0.72,-0.62,0.71,lowest of its class,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 100",-0.13,0.27,-1.88,-0.52,highest of its class,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 200",-0.28,0.69,-0.58,0.69,-,-
MLPRegressor,"hidden_layer_sizes: 100, max_iter: 300",-0.31,0.86,-0.49,0.86,-,highest of its class
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 100",-0.22,0.23,-1.76,-0.36,-,-
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 200",-0.33,0.72,-0.62,0.72,-,-
MLPRegressor,"hidden_layer_sizes: 150, max_iter: 300",-0.36,0.88,-0.55,0.88,-,-
